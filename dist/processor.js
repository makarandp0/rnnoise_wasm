(()=>{let t,e=null,s=0;console.log("Processor loaded 2");class o extends AudioWorkletProcessor{constructor(s){super(Object.assign(Object.assign({},s),{numberOfInputs:1,numberOfOutputs:1,outputChannelCount:[1]})),e||(e=new WebAssembly.Instance(s.processorOptions.module).exports,t=new Float32Array(e.memory.buffer)),console.log("processor creating state"),this.state=e.newState(),this.port.onmessage=({data:t})=>{let s=0;t?(null===this.state&&(console.log("processor creating state again"),this.state=e.newState()),s=e.getVadProb(this.state)):this.state&&(console.log("processor deleting state"),e.deleteState(this.state),this.state=null),this.port.postMessage({vadProb:s,isActive:null!==this.state})}}process(o,a,n){if(this.state){t.set(o[0][0],e.getInput(this.state)/4);const s=a[0][0],n=e.pipe(this.state,s.length)/4;n&&s.set(t.subarray(n,n+s.length))}else a[0][0].set(o[0][0]);return s++,s%111==0&&console.log(`${s}: RNNoise ${this.state?"enabled":"disabled"}`),!0}}registerProcessor("rnnoise",o)})();